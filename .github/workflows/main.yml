# Nome da sua automação, aparecerá na aba "Actions"
name: Enviar Email de Estudos Diariamente

# Define quando a automação deve ser executada
on:
  # Permite que você execute manualmente para testar
  workflow_dispatch:

  # Define o agendamento (schedule) usando a sintaxe "cron"
  schedule:
    # IMPORTANTE: O GitHub usa o horário UTC (Coordinated Universal Time).
    # 8h da manhã de São Paulo (UTC-3) corresponde a 11:00 em UTC.
    # A sintaxe é: Minuto Hora Dia-do-Mês Mês Dia-da-Semana
    - cron: '0 11 * * *'

# Define as tarefas que a automação executará
jobs:
  build-and-send:
    # O tipo de máquina virtual que o GitHub usará (Ubuntu é ótimo para Python)
    runs-on: ubuntu-latest

    # A sequência de passos que a máquina executará
    steps:
      # 1º Passo: Baixar o seu código do repositório para a máquina virtual
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2º Passo: Configurar o ambiente Python na máquina virtual
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Você pode usar a versão que preferir

      # 3º Passo: Instalar todas as bibliotecas listadas no seu requirements.txt
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4º Passo: Executar o seu script main.py
      - name: Executar o script principal e enviar o email
        # Aqui, nós injetamos os "Secrets" como variáveis de ambiente
        # O script Python os lerá com os.getenv()
        env:
          MEU_EMAIL: ${{ secrets.MEU_EMAIL }}
          MINHA_SENHA: ${{ secrets.MINHA_SENHA }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        run: python3 main.py
